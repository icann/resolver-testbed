---
- name: (Linux) Restart networking.
  ansible.builtin.service:
    name: networking
    state: restarted
  listen: restart_network
  when: network_configuration.system == 'linux'

- name: (Ubuntu) Restart networking.
  ansible.builtin.service:
    name: systemd-networkd
    state: restarted
  listen: restart_network
  when: network_configuration.system == 'ubuntu'

- name: (Ubuntu) Apply netplan.
  ansible.builtin.shell:
    cmd: netplan apply
  listen: restart_network
  when: network_configuration.system == 'ubuntu'

- name: (CentOS) Restart networking.
  ansible.builtin.service:
    name: NetworkManager
    state: restarted
  listen: restart_network
  when: network_configuration.system == 'centos'

- name: (NetBSD) Restart network.
  ansible.builtin.shell:
    # source the profile to get the correct $PATH
    cmd: ". /root/.profile && /etc/rc.d/network restart"
  listen: restart_network
  when: network_configuration.system == 'netbsd'

- name: (NetBSD) Restart staticroute.
  ansible.builtin.shell:
    # source the profile to get the correct $PATH
    cmd: ". /root/.profile && /etc/rc.d/staticroute restart"
  listen: restart_network
  when: network_configuration.system == 'netbsd'

- name: (FreeBSD) Restart networking.
  ansible.builtin.shell:
    cmd: /etc/rc.d/netif restart
  listen: restart_network
  when: network_configuration.system == 'freebsd'

- name: (FreeBSD) Restart routing.
  ansible.builtin.shell:
    cmd: /etc/rc.d/routing restart
  listen: restart_network
  when: network_configuration.system == 'freebsd'

- name: (FreeBSD) Restart dhcp.
  ansible.builtin.shell:
    cmd: /etc/rc.d/dhclient restart em0
  listen: restart_network
  when: network_configuration.system == 'freebsd'

- name: (FreeBSD) Reload sshd.
  ansible.builtin.shell:
    cmd: /etc/rc.d/sshd reload
  listen: restart_network
  when: network_configuration.system == 'freebsd'

- name: (FreeBSD) Restart firewall.
  ansible.builtin.shell:
    cmd: /etc/rc.d/ipfw restart
  listen: restart_network
  when: network_configuration.system == 'freebsd'

- name: Unknown system; fail the playbook.
  ansible.builtin.fail:
    msg: "Unknown system! Cannot restart network!"
  when: "network_configuration.system not in ['linux', 'ubuntu', 'freebsd', 'netbsd', 'centos']"
