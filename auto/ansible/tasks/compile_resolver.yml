---
- name: Per software compilation tasks.
  vars:
    this_source_dir: "{{ BUILD_SOURCE_DIR }}/{{ host_name }}"
    this_target_dir: "{{ BUILD_TARGET_DIR }}/{{ host_name }}"
  block:
  - name: Make sure the needed directories are there.
    ansible.builtin.file:
      path: "{{ item }}"
      state: directory
    with_items:
      - "{{ this_source_dir }}"
      - "{{ this_target_dir }}"

  - name: Check if we already have the source.
    ansible.builtin.find:
      paths: "{{ this_source_dir }}"
      patterns: ".received.this"
      file_type: file
      hidden: yes
    register: software_received

  - name: Get the source and decompress.
    ansible.builtin.unarchive:
      src: "{{ url }}"
      dest: "{{ BUILD_SOURCE_DIR }}/"
      remote_src: yes
      owner: "root"
      group: "root"
    when: software_received.files == []

  - name: Mark as received.
    ansible.builtin.file:
      path: "{{ this_source_dir }}/.received.this"
      state: touch
    when: software_received.files == []

  - name: Stop!
    ansible.builtin.meta: end_play

      #- name: Make sure we have the directory.
      #- name: Make the source. We could build in separate steps (configure, make) but I don't think it is relevant in this case; we don't recompile the same source.

  delegate_to: "{{ on_host }}"
