---
- name: Per software configuration tasks.
  delegate_to: "{{ on_host }}"
  vars:
    this_source_dir: "{{ BUILD_SOURCE_DIR }}/{{ host_name }}"
    this_target_dir: "{{ BUILD_TARGET_DIR }}/{{ host_name }}"
  block:
  - name: Check if we already built the source.
    ansible.builtin.find:
      paths: "{{ this_target_dir }}"
      patterns: ".compiled.this"
      file_type: file
      hidden: yes
    register: software_compiled

  - name: Configure compiled software
    when: software_compiled.files != []
    block:
    - name: Configure BIND
      when: host_name.split('-')[0] == 'bind'
      ansible.builtin.meta: noop

    - name: Configure Unbound
      when: host_name.split('-')[0] == 'unbound'
      block: 
      - name: Install unbound.conf
        ansible.builtin.copy:
          src: "files/{{ host_name.split('-')[0] }}.conf"
          dest: "{{ this_target_dir }}/etc/unbound"
    
      - name: Is unbound-setup configured?
        stat:
          path: "{{ this_target_dir }}/etc/unbound/unbound_control.key"
        register: unbound_control_key
    
      - name: Run unbound-control-setup
        ansible.builtin.shell:
          cmd: "sbin/unbound-control-setup"
          chdir: "{{ this_target_dir }}"
        when: not unbound_control_key.stat.exists
    
      - name: Is unbound started?
        stat:
          path: "{{ this_target_dir }}/etc/unbound/unbound.pid"
        register: unbound_pid
    
      - name: stop unbound (if it is running)
        ansible.builtin.shell:
          cmd: "PATH={{ this_target_dir }}/bin:{{ this_target_dir }}/sbin:$PATH unbound-control stop"
          chdir: "{{ this_target_dir }}"
        when: unbound_pid.stat.exists
