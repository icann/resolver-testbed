---
- name: Read possible inception variables.
  import_tasks:
    file: tasks/inception/read_inception_variables.yml

- name: Check required variables for this task.
  assert:
    that:
      - software_source_dir is defined
      - software_target_dir is defined
    fail_msg: "Not all required variables are defined!"
  delegate_to: localhost

- name: Per software compilation tasks.
  vars:
    this_source_dir: "{{ software_source_dir }}/{{ software_name }}"
    this_target_dir: "{{ software_target_dir }}/{{ software_name }}"
  block:
  - name: Make sure the needed directories are there.
    file:
      path: "{{ item }}"
      state: directory
    with_items:
      - "{{ this_source_dir }}"
      - "{{ this_target_dir }}"

  - name: Make sure the zone configuration directory is there.
    file:
      path: "{{ this_target_dir }}/zone_config.d"
      state: directory

  - name: Check if we already have the source.
    find:
      paths: "{{ this_source_dir }}"
      patterns: ".received.this"
      file_type: file
      hidden: yes
    register: software_received

  - name: Get the source and decompress.
    unarchive:
      src: "{{ url }}"
      dest: "{{ software_source_dir }}/"
      remote_src: yes
      owner: "root"
      group: "root"
    when: software_received.files == []

  - name: Mark as received.
    file:
      path: "{{ this_source_dir }}/.received.this"
      state: touch
    when: software_received.files == []

  - name: Copy over files.
    copy:
      src: "{{ item.src }}"
      dest: "{{ this_source_dir }}/{{ item.dest }}"
    loop: "{{ files_copy }}"
    when: files_copy
    register: copied_files

  - name: Check if we already built the source.
    find:
      paths: "{{ this_target_dir }}"
      patterns: ".compiled.this"
      file_type: file
      hidden: yes
    register: software_compiled

  - name: Clear the build status.
    file:
      path: "{{ this_target_dir }}/.compiled.this"
      state: absent
    when: copied_files is changed

  - name: Build.
    shell:
      cmd: "{{ make_str.format(PREFIX=this_target_dir) ~ ' && touch ' ~ this_target_dir ~ '/.compiled.this' }}"
      chdir: "{{ this_source_dir }}"
    when: software_compiled.files == [] or copied_files is changed

  delegate_to: localhost
